import React, { useEffect, useRef, useState } from 'react';
import { View, Text, StyleSheet, Image } from 'react-native';
import { Video, ResizeMode } from 'expo-av';
import { theme } from '../styles/theme';

interface SplashScreenProps {
  onFinish: () => void;
}

export const SplashScreen: React.FC<SplashScreenProps> = ({ onFinish }) => {
  const videoRef = useRef<Video>(null);
  const [videoLoaded, setVideoLoaded] = useState(false);

  useEffect(() => {
    // Auto-finish after video duration (adjust as needed)
    const timer = setTimeout(() => {
      onFinish();
    }, 4000); // 4 seconds total

    return () => clearTimeout(timer);
  }, [onFinish]);

  const handleVideoLoad = () => {
    setVideoLoaded(true);
  };

  const handleVideoEnd = () => {
    // Video finished playing
    setTimeout(() => {
      onFinish();
    }, 500); // Small delay after video ends
  };

  return (
    <View style={styles.container}>
      <View style={styles.content}>
        {/* App Icon */}
        <View style={styles.iconContainer}>
          <Image 
            source={require('../../assets/icon_no_background.png')}
            style={styles.icon}
            resizeMode="contain"
          />
        </View>

        {/* Video Animation */}
        <View style={styles.videoContainer}>
          <Video
            ref={videoRef}
            style={styles.video}
            source={require('../../assets/nobackground.mp4')}
            useNativeControls={false}
            resizeMode={ResizeMode.CONTAIN}
            isLooping={false}
            shouldPlay={videoLoaded}
            onLoad={handleVideoLoad}
            onPlaybackStatusUpdate={(status) => {
              if (status.isLoaded && status.didJustFinish) {
                handleVideoEnd();
              }
            }}
          />
        </View>

        {/* Fallback Text if video doesn't load */}
        {!videoLoaded && (
          <View style={styles.fallbackContainer}>
            <Text style={styles.fallbackText}>Neurotype</Text>
          </View>
        )}
      </View>
    </View>
  );
};

const styles = StyleSheet.create({
  container: {
    flex: 1,
    backgroundColor: theme.colors.background,
    justifyContent: 'center',
    alignItems: 'center',
  },
  content: {
    alignItems: 'center',
    justifyContent: 'center',
  },
  iconContainer: {
    marginBottom: theme.spacing.xxxl,
  },
  icon: {
    width: 120,
    height: 120,
  },
  videoContainer: {
    width: 300,
    height: 100,
    justifyContent: 'center',
    alignItems: 'center',
  },
  video: {
    width: '100%',
    height: '100%',
  },
  fallbackContainer: {
    width: 300,
    height: 100,
    justifyContent: 'center',
    alignItems: 'center',
  },
  fallbackText: {
    fontSize: theme.typography.sizes.xxl,
    fontWeight: theme.typography.weights.bold,
    color: theme.colors.primary,
    fontFamily: theme.typography.fontFamily,
    textAlign: 'center',
  },
}); 